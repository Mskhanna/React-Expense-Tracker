{"ast":null,"code":"var _jsxFileName = \"/Users/manukhanna/Documents/Udemy - React.js/React-Expense-Tracker/src/components/Chart/ChartBar.js\";\nimport React from \"react\";\nimport \"./ChartBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartBar = props => {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    // Normalize the value within a range [0, 1]\n    const normalizedValue = props.value / props.maxValue;\n\n    // Define a maximum percentage height for a bar (e.g., 80%)\n    const maxBarHeightPercentage = 80;\n\n    // Calculate the bar height percentage based on normalization and the maximum percentage height\n    barFillHeight = Math.round(normalizedValue * maxBarHeightPercentage) + \"%\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar__fill\",\n        style: {\n          height: barFillHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = ChartBar;\nexport default ChartBar;\nvar _c;\n$RefreshReg$(_c, \"ChartBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChartBar","props","barFillHeight","maxValue","normalizedValue","value","maxBarHeightPercentage","Math","round","className","children","style","height","fileName","_jsxFileName","lineNumber","columnNumber","label","_c","$RefreshReg$"],"sources":["/Users/manukhanna/Documents/Udemy - React.js/React-Expense-Tracker/src/components/Chart/ChartBar.js"],"sourcesContent":["import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    // Normalize the value within a range [0, 1]\n    const normalizedValue = props.value / props.maxValue;\n\n    // Define a maximum percentage height for a bar (e.g., 80%)\n    const maxBarHeightPercentage = 80;\n\n    // Calculate the bar height percentage based on normalization and the maximum percentage height\n    barFillHeight = Math.round(normalizedValue * maxBarHeightPercentage) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,IAAIC,aAAa,GAAG,IAAI;EAExB,IAAID,KAAK,CAACE,QAAQ,GAAG,CAAC,EAAE;IACtB;IACA,MAAMC,eAAe,GAAGH,KAAK,CAACI,KAAK,GAAGJ,KAAK,CAACE,QAAQ;;IAEpD;IACA,MAAMG,sBAAsB,GAAG,EAAE;;IAEjC;IACAJ,aAAa,GAAGK,IAAI,CAACC,KAAK,CAACJ,eAAe,GAAGE,sBAAsB,CAAC,GAAG,GAAG;EAC5E;EAEA,oBACEP,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBX,OAAA;MAAKU,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BX,OAAA;QACEU,SAAS,EAAC,iBAAiB;QAC3BE,KAAK,EAAE;UAAEC,MAAM,EAAEV;QAAc;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNjB,OAAA;MAAKU,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAET,KAAK,CAACgB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACE,EAAA,GAzBIlB,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}