{"ast":null,"code":"var _jsxFileName = \"/Users/manukhanna/Documents/Udemy - React.js/React-Expense-Tracker/src/components/NewExpense/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = props => {\n  _s();\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [hideForm, setHideForm] = useState(true);\n\n  //   const [userInput,c setUserInput] = useState({\n  //     enteredTitle: \"\",\n  //     enteredAmount: \"\",\n  //     enteredDate: \"\",\n  //   });\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n\n    //Approach 2\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    //Approach to use over approach 2 ( if our state depends on the previous state, approach 3 should be used over approach 2\n    // as, this prevState is provided by React and it will always be the latest updated form of the state)\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n  };\n\n  //Shared change Handler\n  //   const sharedChangeHandler = (identifier, value) => {\n  //     if (identifier === \"title\") {\n  //       setEnteredTitle(value);\n  //     } else if (identifier === \"date\") {\n  //       setEnteredDate(value);\n  //     } else {\n  //       setEnteredAmount(value);\n  //     }\n  //   };\n  //   onChange={(event) =>\n  //     sharedChangeHandler(\"amount\", event.target.value)}\n  // />\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n\n    //console.log(expenseData);\n    props.onSaveExpenseData(expenseData);\n    //Two way binding 1\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n  const addNewTrue = () => {\n    setHideForm(true);\n  };\n  const addNewFalse = () => {\n    setHideForm(false);\n  };\n  let addNewExpense = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense__actions\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewFalse,\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n  if (hideForm === false) {\n    console.log(hideForm);\n    addNewExpense = /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: enteredTitle //Two way binding 2\n            ,\n            onChange: titleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0.01\",\n            step: \"0.01\",\n            value: enteredAmount //Two way binding 2\n            ,\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2020-01-01\",\n            max: \"2024-12-31\",\n            value: enteredDate //Two way binding 2\n            ,\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewTrue,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  } else {}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: addNewExpense\n  }, void 0, false);\n};\n_s(ExpenseForm, \"t4xKemiGQFBzSfh67VBBMDENDK4=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ExpenseForm","props","_s","enteredTitle","setEnteredTitle","enteredDate","setEnteredDate","enteredAmount","setEnteredAmount","hideForm","setHideForm","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","addNewTrue","addNewFalse","addNewExpense","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","console","log","onSubmit","type","onChange","min","step","max","_c","$RefreshReg$"],"sources":["/Users/manukhanna/Documents/Udemy - React.js/React-Expense-Tracker/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [hideForm, setHideForm] = useState(true);\n\n  //   const [userInput,c setUserInput] = useState({\n  //     enteredTitle: \"\",\n  //     enteredAmount: \"\",\n  //     enteredDate: \"\",\n  //   });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n\n    //Approach 2\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    //Approach to use over approach 2 ( if our state depends on the previous state, approach 3 should be used over approach 2\n    // as, this prevState is provided by React and it will always be the latest updated form of the state)\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n  };\n\n  //Shared change Handler\n  //   const sharedChangeHandler = (identifier, value) => {\n  //     if (identifier === \"title\") {\n  //       setEnteredTitle(value);\n  //     } else if (identifier === \"date\") {\n  //       setEnteredDate(value);\n  //     } else {\n  //       setEnteredAmount(value);\n  //     }\n  //   };\n  //   onChange={(event) =>\n  //     sharedChangeHandler(\"amount\", event.target.value)}\n  // />\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    //console.log(expenseData);\n    props.onSaveExpenseData(expenseData);\n    //Two way binding 1\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  const addNewTrue = () => {\n    setHideForm(true);\n  };\n  const addNewFalse = () => {\n    setHideForm(false);\n  };\n\n  let addNewExpense = (\n    <div className=\"new-expense__actions\">\n      <button onClick={addNewFalse}>Add Expense</button>\n    </div>\n  );\n\n  if (hideForm === false) {\n    console.log(hideForm);\n    addNewExpense = (\n      <form onSubmit={submitHandler}>\n        <div className=\"new-expense__controls\">\n          <div className=\"new-expense__control\">\n            <label>Title</label>\n            <input\n              type=\"text\"\n              value={enteredTitle} //Two way binding 2\n              onChange={titleChangeHandler}\n            />\n          </div>\n          <div className=\"new-expense__control\">\n            <label>Amount</label>\n            <input\n              type=\"number\"\n              min=\"0.01\"\n              step=\"0.01\"\n              value={enteredAmount} //Two way binding 2\n              onChange={amountChangeHandler}\n            />\n          </div>\n          <div className=\"new-expense__control\">\n            <label>Date</label>\n            <input\n              type=\"date\"\n              min=\"2020-01-01\"\n              max=\"2024-12-31\"\n              value={enteredDate} //Two way binding 2\n              onChange={dateChangeHandler}\n            />\n          </div>\n        </div>\n        <div className=\"new-expense__actions\">\n          <button onClick={addNewTrue}>Cancel</button>\n          <button type=\"submit\">Add Expense</button>\n        </div>\n      </form>\n    );\n  }else {\n    \n  }\n\n  return <>{addNewExpense}</>;\n};\n\nexport default ExpenseForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}